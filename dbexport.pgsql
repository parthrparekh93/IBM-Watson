--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: building; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE building (
    b_name character varying(100) NOT NULL,
    b_code character varying(20) NOT NULL,
    x_co double precision,
    y_co double precision
);


ALTER TABLE building OWNER TO postgres;

--
-- Name: course; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE course (
    cid integer NOT NULL,
    name character varying(250),
    cno character varying(20),
    dept character varying(100),
    description character varying(1000),
    keyword character varying(500)
);


ALTER TABLE course OWNER TO postgres;

--
-- Name: course_prof; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE course_prof (
    cid integer,
    pid integer,
    loc_no character varying(50),
    loc_name character varying(150),
    lec_time character varying(500),
    oh_time character varying(500)
);


ALTER TABLE course_prof OWNER TO postgres;

--
-- Name: course_prof2; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE course_prof2 (
    cid integer,
    pid integer,
    loc_no character varying(50),
    loc_code character varying(150),
    lec_time character varying(500),
    oh_time character varying(500)
);


ALTER TABLE course_prof2 OWNER TO postgres;

--
-- Name: course_review; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE course_review (
    cid integer,
    pid integer,
    review character varying(10000),
    sentiment character varying(20)
);


ALTER TABLE course_review OWNER TO postgres;

--
-- Name: professor; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE professor (
    pid integer NOT NULL,
    pname character varying(100),
    dept character varying(100),
    loc_no character varying(50),
    loc_name character varying(150)
);


ALTER TABLE professor OWNER TO postgres;

--
-- Name: professor2; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE professor2 (
    pid integer NOT NULL,
    pname character varying(100),
    dept character varying(100),
    loc_no character varying(50),
    loc_code character varying(150)
);


ALTER TABLE professor2 OWNER TO postgres;

--
-- Data for Name: building; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY building (b_name, b_code, x_co, y_co) FROM stdin;
Altschul Hall	ALT	40.8100942000000018	-73.9655374999999964
Avery Hall	AVH	40.7728219999999979	-73.9852082999999965
Barnard Hall	BAR	40.8097376999999994	-73.9661076000000008
Black Building	BLK	40.7973294999999965	-73.9979689999999977
Buell Hall	BUE	40.8077275999999998	-73.9636322000000064
Butler Library	BUT	40.8064029000000019	-73.9654137999999932
Broadway Residence Hall	BWY	40.8060985999999986	-73.966899699999999
Carman Hall	CAR	40.8066233999999994	-73.9663673999999958
80 Claremont	CLA	40.8110994000000034	-73.9649234000000035
Deutsches Haus	DEU	40.7313389999999984	-73.9974250000000069
Diana Center	DIA	40.8098535000000027	-73.9651668999999998
Dodge Building	DOD	40.7797781000000015	-73.987101899999999
Engineering Terrace	ENG	40.8088759999999979	-73.9621068000000008
Fayerweather	FAY	40.8081972000000022	-73.962604099999993
Fairchild Life Sciences Building	FLS	40.809108700000003	-73.9626011999999946
Grace Dodge Hall	GDH	40.8104413000000008	-73.9626666999999998
Green Hall Law Building	GRE	40.7212451999999985	-73.9890017000000029
Hamilton Hall	HAM	40.8068467000000012	-73.9638948000000056
Havemeyer Hall	HAV	40.8093841000000026	-73.9643906000000015
Heyman Center for Humanities	HEY	40.807266300000002	-73.9609865999999982
Casa Hispanica	HIS	40.808216299999998	-73.9672491999999977
Horace Mann Hall	HM	40.8108197000000033	-73.9638235000000037
Horace Mann Building	HMB	40.8520184999999998	-73.9657014000000004
Hartley Hall	HTL	40.8064475999999985	-73.9638642999999973
International Affairs Building	IAB	40.8077431999999973	-73.9619146000000001
Journalism Building	JRN	40.8073556000000011	-73.9625092999999936
Kent Hall	KNT	40.8072329000000025	-73.9619758000000047
Knox Hall	KNX	40.8120029000000031	-73.9639956000000041
Kraft Center	KRAF	40.8074867999999995	-73.9674112999999949
Lehman Hall	LEH	40.8074654999999993	-74.035439199999999
Mudd building	MUD	40.8094178999999997	-73.9600365000000011
Nash building	NASH	40.8183975000000032	-73.9646213000000046
Northwest Corner	NWC	40.8087263999999976	-73.963933499999996
Philosophy Hall	PHI	40.8074727999999993	-73.9632663999999949
Prentis Hall	PRN	40.8165029999999973	-73.9616812999999951
Pupin Laboratories	PUP	40.8100510000000014	-73.9636236999999994
Schapiro Center for Engineering & Physical Science Research	SCEP	40.8096293999999986	-73.963013200000006
Schermerhorn Hall	SCH	40.8086127999999988	-73.9626240000000053
Schapiro (Residence Hall)	SCHP	40.8079054999999968	-73.9674141999999932
School of Social Work	SSW	40.8078841999999966	-74.0354429000000067
Thompson Hall	TH	40.8097489999999965	-73.9623950999999948
Uris Hall	URI	40.8089292000000015	-73.9635533000000009
Union Theological Seminary	UTS	40.8114022000000034	-73.9640037000000063
Watson Hall	WAT	40.8074774999999974	-73.963933499999996
Zankel	ZB	40.8090290999999965	-73.963803200000001
Alfred Lerner Hall	LER	40.8070009999999996	-73.9662239000000028
Lewisohn Hall	LEW	40.8079451999999989	-73.9651135000000011
Mathematics Building	MAT	40.8082203000000021	-73.964016799999996
Macy Hall	MCY	40.8082203000000021	-73.9640275999999943
Milbank Hall	MIL	40.8082202000000009	-73.9640382999999986
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY course (cid, name, cno, dept, description, keyword) FROM stdin;
1	Intro to Electrical Engineering	ELEN 1201	Electrical Engineering	Basic concepts of electrical engineering. Electrical variables, circuit laws, nonlinear and linear elements, ideal and real sources, transducers, operational amplifiers in simple circuits, external behavior of diodes and transistors, first order RC and RL circuits. Digital representation of a signal, digital logic gates, flipflops. Weekly lab is an integral part of the course	
3	Digital Image Processing	ELEN 4830	Electrical Engineering	This course will introduce fundamental technologies for digital image/video representation, compression, analysis, and processing. Students will gain understanding of algorithm/system design, analytical tools, and practical implementations of various digital image applications.	
4	Neural Networks and Deep Learning	ECBM E4040	ELectrical Engineering	Developing features & internal representations of the world, artificial neural networks, classifying handwritten digits with logistics regression, feedforward deep networks, back propagation in multilayer perceptrons, regularization of deep or distributed models, optimization for training deep models, convolutional neural networks, recurrent and recursive neural networks, deep learning in speech and object recognition.	
5	Bayesian Models for Machine Learning	EECS E6720	Electrical Engineering	This intermediate-level machine learning course will focus on Bayesian approaches to machine learning. Topics will include mixed-membership models, latent factor models and Bayesian nonparametric methods. We will also focus on mean-field variational Bayesian inference, an optimization-based approach to approximate posterior learning. Applications of these methods include image processing, topic modeling, collaborative filtering and recommendation systems. We will discuss a selection of these in class.	
7	Machine Learning	coms4771	Computer Science	COMS 4771 is a graduate-level introduction to machine learning. Most of the course covers the basic principles of supervised learning, along with some basic algorithmic paradigms. Additional topics, such as representation learning and online learning, may be covered if time permits.	
8	Advanced Database Systems	coms6111	Computer Science	Continuation of COMS W4111-Introduction to Databases, covers the latest trends in both database research and industry. Programming projects are required.	
10	INTRO TO COMP FOR ENG/APP SCI	E1006	ComputerScience	An interdisciplinary course in computing intended for first year SEAS students. Introduces computational thinking, algorithmic problem solving and Python programming with applications in science and engineering. Assumes no prior programming background.	
11	Discrete Mathematics	W3203	ComputerScience	Prerequisites: any introductory course in computer programming. Logic and formal proofs, sequences and summation, mathematical induction, binomial coefficients, elements of finite probability, recurrence relations, equivalence relations and partial orderings, and topics in graph theory (including isomorphism, traversability, planarity, and colorings).	
12	Introduction to Computational Learning Theory	coms 4252	Computer Science	This course will give an introduction to some of the central topics in computational learning theory, a field which approaches the above question from a theoretical computer science perspective. We will study well-defined mathematical and computational models of learning in which it is possible to give precise and rigorous analyses of learning problems and learning algorithms. A big focus of the course will be the computational efficiency of learning in these models. We'll develop computationally efficient algorithms for certain learning problems, and will see why efficient algorithms are not likely to exist for other problems.	
14	TOPICS IN COMPUTER SCIENCE-cognitive computing using IBM watson	COMSE6998	Computer Science	Learning about Watson and the Deep QA architecture. Familiarize with the Watson technology (UIMA). Appreciate the role of semantic technology in information system. Perform a full research experience in the field of semantic technology	
2	Digital VLSI Circuits	EECS E4321	Electrical Engineering	This course is an introduction to the design of integrated circuits in leading-edge CMOS technology.  Full-custom design techniques as applied to digital integrated circuits are the emphasis.  The course culminates in a ``mini-design" project, implemented in an IBM 90-nm process. Extensive use of the CAD tools in Columbia's environment will be required.	
9	Security Architecture & Engineering	coms4187	Computer Science	Computer security concepts and mechanisms; measures employed in countering such threats. Concepts and tools available in order to assume an appropriate security posture. Foundations of security. Identification, authentication, authorization. Software design for security and assurance. Hardware assists. Security architecture; design for security. Security tradeoffs.	
13	Analysis of Algorithms I	coms4231	Computer Science	One of the aims of this class is to teach you to reason about algorithms, describe them and formally prove claims about their correctness and performance. In writing up your assignments, it is important to be as clear, precise and succinct as possible. Understundability will be an important factor in the grading of the assignments.	
6	Introduction to Databases	coms4111	Computer Science	The goal of this class is two-fold. First, to introduce you to core database concepts (e.g., data modeling, logical design, SQL) so that you too can build a billion dollar application. Second, to teach enough about database engine internals (e.g., physical database design, query optimization, transaction processing) so you have a good sense of why queries may be running slowly/incorrectly. Students are expected to be comfortable with data structures and Python.	
\.


--
-- Data for Name: course_prof; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY course_prof (cid, pid, loc_no, loc_name, lec_time, oh_time) FROM stdin;
1	1	340	Mudd	MW 4:10-5:25	Mon. 12:30-3:00PM, Tues. 9:00-11:00 AM, Wed. 9:00AM-12:00PM and 12:30-3:00PM
2	2	633	Mudd	Monday & Wednesday, 1:10 pm- 2:25pm	MW 4-5PM
3	3	1024	Mudd	MW 2:40-3:55 pm	Mondays (4:00pm-5:00pm)
4	4	1100	Mudd	F 10:10am-12:40pm	Thursday 11:30 AM-1:00PM
5	5	417	International Affairs Building	Thursday 4:10-6:40pm	Monday 11am-1pm
6	6	614	Schermerhorn	MW 2:40pm-3:55pm	MW 4pm
6	7	457	Mudd building	Wednesday 4:10pm – 6:40pm	Wednesday 3 - 4
7	8	501	NWC	Mon/Wed 1:10 PM–2:25 PM	Mon 2:30 PM–3:30 PM
8	9	1127	MUD	Fridays, 2:10-4:00 p.m.	Thursdays, 2:00-4:00 p.m.
9	10	1127	MUD	MonWed 02:40-3:55 PM	Monday, 4:00-5:00 Tuesday, 3:00-4:00
10	11	301	Pupin	MW 2:40pm-3:55pm	Wednesday 4pm-6pm
11	11	REN	Kraft Center	MW 10:10am-11:25am	Friday 2pm-4pm
12	12	702	Hamilton	Tues/Thurs 8:40-9:55	Fri 9:30-11:30
13	13	207	Mathematics	Tuesday, Thursday 11:40-12:55	Tuesday 4:30 - 6:30
14	14	337	Mud	Mo 4:10pm-6:00pm	Mon 2:00PM and 3:45PM
\.


--
-- Data for Name: course_prof2; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY course_prof2 (cid, pid, loc_no, loc_code, lec_time, oh_time) FROM stdin;
1	1	340	MUD	MW 4:10-5:25	Mon. 12:30-3:00PM, Tues. 9:00-11:00 AM, Wed. 9:00AM-12:00PM and 12:30-3:00PM
2	2	633	MUD	Monday & Wednesday, 1:10 pm- 2:25pm	MW 4-5PM
3	3	1024	MUD	MW 2:40-3:55 pm	Mondays (4:00pm-5:00pm)
4	4	1100	MUD	F 10:10am-12:40pm	Thursday 11:30 AM-1:00PM
5	5	417	IAB	Thursday 4:10-6:40pm	Monday 11am-1pm
6	6	614	SCH	MW 2:40pm-3:55pm	MW 4pm
6	7	457	MUD	Wednesday 4:10pm – 6:40pm	Wednesday 3 - 4
7	8	501	NWC	Mon/Wed 1:10 PM–2:25 PM	Mon 2:30 PM–3:30 PM
8	9	1127	MUD	Fridays, 2:10-4:00 p.m.	Thursdays, 2:00-4:00 p.m.
9	10	1127	MUD	MonWed 02:40-3:55 PM	Monday, 4:00-5:00 Tuesday, 3:00-4:00
10	11	301	PUP	MW 2:40pm-3:55pm	Wednesday 4pm-6pm
11	11	REN	KRAF	MW 10:10am-11:25am	Friday 2pm-4pm
12	12	702	HAM	Tues/Thurs 8:40-9:55	Fri 9:30-11:30
13	13	207	MAT	Tuesday, Thursday 11:40-12:55	Tuesday 4:30 - 6:30
14	14	337	MUD	Mo 4:10pm-6:00pm	Mon 2:00PM and 3:45PM
\.


--
-- Data for Name: course_review; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY course_review (cid, pid, review, sentiment) FROM stdin;
1	1	\nVallancourt is definitely a very personable and friendly professor. He's easy to understand and you can tell that he loves to teach, making jokes he must have done for years with the same enthusiasm. Additionally, if you have any questions, he doesn't mind answering them. He even moves around exams and quizzes if it's inconvenient for other students. I would encourage buying the book, but it can be very difficult to understand at times. He writes most of his notes on the blackboard and doesn't put them online, so going to class is encouraged. I believe the labs were the most difficult part of this class because we had to build several types of circuits which weren't explained very well in the lab manual. However, the TAs are very helpful if you just ask them. The lab reports are also not graded harshly. \nWorkload:\n\n	"negative"
1	1	\nThis is a superb course. Vallancourt has a talent with sparking people's interest in EE. Prior to this class, I had never fully understood how to construct a circuit on a breadboard, and I didn't have any idea what an op-amp actually was. This class changed has made me more competent in the language used by many computer engineers and electrical engineers alike. Material-wise, the course covers much of the same material covered in Intro to Electricity & Magnetism. However, it focuses on the practical applications of these concepts, and also introduces new ideas to the material from intro E&M. Non E&M concepts covered include the superposition principle, node analysis, op-amps, transformers, transfer functions, Boolean logic circuits, diodes, and transistors. Included with the class is the weekly 3-hour lab session. Each lab involves demonstrating or exploring concepts from lecture. You get used to building circuits on a breadboard very quickly, even if you have no prior experience. Labs range from taking current measurements that correspond to changes in voltage across a resistor to picking up an AC radio frequency and listening to it through a speaker. You complete labs and submit one lab report per week with your partner. The lab TAs are very helpful during labs and respond to email quickly. Labs are really interesting and useful because you demonstrate physically the theoretical concepts discussed in lecture. I would take this course again in a femtosecond.\nWorkload:\n\n	"negative"
1	1	\nBest. Professor. Ever.\nMade the material interesting, valued student participation, was very funny, always helpful in lab sections and the like. Gave a great introduction to what EE was all about.\nI cannot find a single bad thing to say about his teaching. Anyways, I recommend taking this class because all engineers have to take one pre-professional class anyways, plus this class works its way into the requirements of other fields of engineering too. (BME has this as a req, as does MechE I think).\nWorkload:\nSeveral problem sets, about 3 quizzes, 1 final.\n	"positive"
1	1	\nVery good class and teacher.  Professor Vallancourt definitely knew his stuff when it came to EE, but he made it simple for the class to understand the basics.  At first the material was really easy, covering stuff like resistors which most people had already done in physics.  But beware, only the first two weeks are really easy; new material will eventually come and it is probably new to most students.  People didn't go to class after those first couple of weeks and suffered as a result on the first quiz.  Material is fine if you go to class, just phasors can be a kinda tough.  I found out there was a lab after I joined the class and sometimes it felt like a separate class cause it was 3 hrs. long and had its own homework through lab reports, so keep that in mind.  Grading seemed to be very fair; Vallancourt said he had like 4 different schemes/curve methods, where he would inflate either your quizzes, or final, or whatever you did best in. Final material felt maybe a little rushed.  And the last week ended up being so much work for some reason, the final lab, its report, a take-home quiz, and the previous lab report.  Overall, easy class, but it had its work.\nIn regards to the textbook used, Vallancourt gives homework from the book but gives numbers from all the editions, so get the cheapest edition you can find.\nWorkload:\nWeekly homework set, weekly lab report due, lab mini-project mid semester and final lab project at the end; 3 quizzes (essentially midterms, but worth less) which were fine if you looked at the practice ones, one final (kinda tough)\n	"negative"
1	1	\nLECTURE: Professor Vallancourt always rocks lecture. He's always eager to answer questions and makes the subject matter pretty clear. However, I find it quite easy to get lost in lecture fast so make sure you get everything you go as there is a lot of material to cover in a short amount of time. \nEXAMS: They are dubbed quizzes and are supposedly 10% of your grade each. There are three and the worst is dropped. I find the quizzes are harder than the material covered in lecture and on par with the hard problems of the problem sets. Also grading is harsh with little to no partial credit so be careful. \nLAB: 3 hour lab sessions once a week. The labs are boring and long and often not well explained by the lab manual. The lab also feels as though we could use 5 more TA's as everyone is asking questions at once. If you can, try to switch into a lab section with less students so you can ask a lot of questions instead of sitting there looking at your thumbs. The lab reports are graded graciously (All lab grades add up to 20% of your grade) There is a final lab project which is worth 10% of your grade. \nHOMEWORK: There is a pset assigned every week. It can take a significant amount of time so plan wisely. Difficulty ranges from easy to very hard. Homework is 10% of your grade. \nFINAL: The final is cumulative and can get difficult. Study hard and study well. Multiple choice is tricky. It's worth 30%\nCURVE: At the end, Prof. Vallancourt takes into account the various scenarios and assigns you a grade the highest of the scenarios. For instance, if you did poorly on your final, he counts it a little less and counts something like the quizzes a little more. \nWorkload:\n\n	"positive"
1	1	\nProf. Vallancourt is intelligent and funny (true, his engineer jokes are not lame at all!) with over 20 years of experience in Electrical Engineering field, as a professor at Columbia and an engineer for HP. I had him for Intro to EE (E1201) last semester, and this semester I am taking his E3331. \nIn E1201 he starts off slowly, going over stuff such as voltage, current, ohmÂ’s law. If you did AP Physics E & M you donÂ’t have to go to the first 5 lectures. But if you havenÂ’t, donÂ’t worry, guy explains stuff in detail and answers your questions crystal clearly. Later in the class, stuff gets a little complicated, but if you show up and pay attention every time there should be no problem. Or you can always go to the office hour, which really helps. \nHe also feels for his students. For example he provides us with 3 different lab sessions and 2 recitation sections trying to fit everyoneÂ’s schedule. And even if you still canÂ’t make it to the recitation, you can always send him emails about whatever questions you have, to which he replies by noon on the second day. Also on the quiz if you misunderstood a problem and did the problem as you understood it, heÂ’ll try look at the problem your way and see if you get it right. Therefore I still got full credit on the 2 problems I misunderstood in a quiz. \n\nWorkload:\n\n	"positive"
1	1	\nVallancourt is awesome. He is extremely responsive to the students. His lectures are clear and enjoyable. At times he moves a bit too quickly and has an annoying habit of simply erasing a small piece of the circuit design on the board to replace it with something else to demonstrate a particular concept, not realizing that the students need a second to re-draw the entire circuit. Also, the textbook is a somewhat awful, but Vallencourt makes up for this. Aside from this, this class was very enjoyable. \nWorkload:\nSomewhat heavy. Weekly homework assignments from the textbook. Three "quizzes" that are essentially midterms. One is dropped. A lab with required lab reports. A final. \n	"positive"
2	2	\nSo. This class is a mixed bag. First off, I was perplexed that given the notoriety of this course, there was no CULPA review. I guess either people expect you to already know about it or are so sick of it by the end that they don't want to think about it anymore. In any case, this class is without a doubt the most work I have ever done for a class so far as a senior undergrad EE. The usefulness of this work... well that's debatable and I'll elaborate.\nThe crux of this class is the "mini" design project as Shepard calls it, which is to design and layout in CAD an entire microprocessor core. This process is an unbelievable amount of work and everything in the class is built around this project. While the class starts off at a slower pace, it quickly picks up and by about halfway through the semester, you will be designing and laying out about a block of the processor per week. Every problem set builds up to this task, either by teaching you a skill you need or straight up designing a part of it. I highly recommend that you start the problem sets early and to not skip them as you will likely have to catch up later. In the final week or so, you'll be finishing the last pieces and putting it all together- and this task combined with whatever else you'll probably be doing will potentially be the busiest you've ever been in your entire life, as it was for me. Again I can't emphasize enough- this class is an insane amount of work and you need to plan around this. Do not take more than one or two other intense courses if possible. I took Analog Circuits (an also intense course) with this course and since I devoted my time to this class, my grade was severely impacted  and was much lower than it would have been otherwise.\nA big problem with this course that you need to plan around is the lack of workspace. You basically need to work in the embedded systems lab, spending days in there, since the computers there have the software which only runs on Linux and though it is possible to log in remotely, I found this to be far from usable. There were an insane number of smelly and rude grad students in there on most days, who would hog the computers by leaving their stuff around and talk loudly, have food, disrespect your personal space (hope you like being violated) etc. and unfortunately, I found that the only way around this was to adopt similar manners, else we literally would not be able to finish on time. All civility is lost when you have that big of a chunk of your grade on the line. My partner and I found ourselves hogging workstations and alternating so that one of us staffed the computer at all hours- she worked during the day and I would sleep and take over during the night.\nProject aside, the midterm and final, while quite long, is actually quite do-able. Be sure to do the practice exams as usually the themes on the actual exams will be similar. However this point brings me to the discussion of how useful this course actually is. Because most of the class revolves around the project, which, when it comes down to it, is more grind work than "brain" work, you actually don't learn too much new stuff. The exams don't cover too much and can be easily studied for by doing the practice exams- the material isn't radically different from what you've seen before in Fundamentals of Comp Systems or electronic circuits. The main thing I took away from this course was how to use Cadence, the industry standard layout software. This skill in itself is actually quite useful- I was doing job apps simultaneously and found that Cadence gave me a huge advantage as it's used everywhere. However, a lot of the grind work I found unnecessary, as we used manual layout editing whereas in the field, we use auto-layout. So much for being "real-world," as Shepard bills it.\nIn summary... well it's not really possible to write a summary for this class. More work than I've ever done in my entire life and not all of it is probably necessary... but it's over now.\nWorkload:\nInsane. The project will take a lot of your time, especially in the 2nd half of the semester. Expect to be basically living in the computer lab. Even for earlier problem sets, DO NOT START THE NIGHT BEFORE. This is coming from a guy that consistently does things last minute- I got hammered in the start because I ignored this advice. Exams are actually manageable compared to the project, just do the practice exams as that's usually what the exam is based on.\n	"negative"
1	1	\nVallancourt is one of the worst professors ever. I don´t know why people keep saying he is amazing. He is not amazing at all. All he does in class is talk about his cat, his life, or his past jobs. I think I only missed about 1 class, and the next class I didnt even know what he was talking about. It gets absurdly annoying that he doesnt use the book, so you cant really catch up because he doesnt even post notes online either. This is a very ineffective way of teaching. It makes me resent going to class. The quizzes were much harded than homework or class material. You usually find questions in the quizzes about material that was not taught during class. Do not take this course with Vallancourt if you easily dose off at a boring professor, because HE IS BORING. He can make jokes once in a while, but not everyone understands the jokes. Its not meant for everyone. Most of the time you would find about 5 people sleeping. Considering this class was at 4pm is a big concern. People shouldnt be dozing off at 4pm. I really did not enjoy my time during this class, and the labs are long and require much effort. They ran during the night, so you would be exhausted just getting there. \nHomeworks are fair. Quizzes get more difficult over time so try to do well on the first ones. Final was bomb.\nWorkload:\n\n	"positive"
1	1	\nVallancourt is a a phenomenal professor, easily the best I've had so far at Columbia. His teaching style, and pro-student attitude make him popular among all his students. The material is interesting and relevant, but pay attention as it's easy to get lost if you miss a lecture or two. The workload isn't difficult, although there is a good bit of it. Homework assignments are manageable and to the point. There is a 3 hour lab session every week, but you can easily finish in half that time. The quizzes get harder as time goes on, but he does drop the lowest grade. I would recommend Professor Vallancourt to any engineer, even if you're not interested in the major, fulfill your pre-professional requirement with Intro to EE.\nWorkload:\nWeekly homework assignments, 3 "quizzes" (one is take home), final, weekly lab, and a project/report (created during last two lab sessions)\n	"positive"
1	1	\nTake this class! This is one of my best classes at Columbia so far. Vallancourt is an amazing professor who will make you love EE. He isn't a researcher, only a lecturer, so clearly he does his job because he loves teaching and not because Columbia's forcing him to. He has over 15 years of industry experience and tells us about the real world applications of everything he teaches in class in his humorous anecdotes.\nHe's also great with grades. He has multiple grading schemes to maximize your final grade. He provides plenty of previous sample quizzes so you can prepare well for his tests. There are three quizzes instead of a midterm, which count for 10% each, so it's less stress.\nMy only gripe about this class was that the labs were for the most part boring and long. Some of the experiments Apart from the actual class, you have to spend 3 hours in the lab and spend about an hour writing a lab report every week. Make sure to get into a group with team mates of equal caliber so you can split the work. Lazy team mates who don't do any work make the labs time consuming. The final project was really fun though. If you're creative, you'll use this opportunity to make some really cool stuff.\nThis is hands down the best pre-professional course, so take it if you can. You will learn a lot and enjoy it.\nWorkload:\n\n	"positive"
1	1	\nVallancourt gives fantastic demonstrations, such as encoding the audio signal from a student's ipod on a laser beam, shooting it across the room, reading it with a photoresistor, and using it to drive a speaker. He'll also dunk integrated circuits in a water bath and watch their transfer characteristics on an O-scope. He's super friendly and encourages questions at office hours, and he'll let you ask him things even if it's not "official" office hours. I can't say much about his board skills because I never really went to class. He speaks native English and gives reasonable practice quizzes/tests. The homework is out of the book and is pretty fair. The lab is a bit time consuming but is graded very, very softly, and if you get the dinnertime lab, you're allowed to bring food. \nWorkload:\nFairly light homeworks each week, a time-consuming lab, 3 tests and a final.\n	"positive"
1	1	\nEasily one of the most enjoyable classes so far in my experience at Columbia. David is an incredible instructor and amiable guy in a multitude of ways. As you might read in the other review(s), he has a LOT of experience in his field, and it definitely shows. He can answer practically any question thrown at him that is in any way related to electrical engineering, whether it's computers, iPODs, or even medicine. \nHe explains things very clearly, and has an uncanny knack for engaging with the class, using his wit and humor to keep everyone interested. He often goes off on tangents that seem almost irrelevant (he calculated the time it would take the whole to say each bit of an iPOD hard drive once, and that's just one of many @_@) but it only ADDS to how incredibly funny and interesting the class is. \nHe responds very quickly to emails, and tries his best to stay on very good terms with his students; he's highly flexible with his schedule, and he shows compassion for students who might be struggling and is always willing to help them out.\nI would definitely recommend this class to anyone, even if you aren't necessarily majoring in something E.E.-oriented. You'll learn ALOT about the way practically anything electronic works just through the fundamentals taught in this course.\nBear in mind that I'm writing this review two days before the final for the class (I should be cramming, shouldn't I?). I don't have a grade yet, and even if I were to score an excellent grade on the final, my grade wouldn't be particularly impressive (B-B+?). Just to show that there's no grade bias here. He really is an amazing guy. \nI might have forgotten to mention some things. I'm sure someone else will get to it in another review; I doubt anyone *truly* dislikes David.\nWorkload:\n1 relatively simple problem sets (4~8 questions) each week except weeks of quizzes of about 1-2 hours each. 3 quizzes, comprised of half very simple conceptual questions and half "in-depth" problems (which still aren't difficult if you know what you're doing). Samples posted for quizzes and finals, and recitation times galore before each quiz.\n	"positive"
1	1	\nProfessor Vallancourt is perhaps the best professor I have had at Columbia.  Firstly, he really cares about teaching and his students.  As a professor who is here to teach--not to use the university's name for his own research interests--he is devoted to not only lecturing, but having his students actually understand the material.  Moreover, Professor Vallancourt brings real world ndustry experience with him, something that is valuable and refreshing in Columbia's almost entirely academic environment.  He is very friendly, understanding, and easy to approach.  He never belittles students or leaves a question unanswered.  Moreover, since students' experience with electrical engineering is widely varied, Professor Vallancourt lectures at an effective pace, and maintains a healthy balance between more difficult material and easier, introductory material.\nMost of all, the class is actually interesting.  In addition to a number of example problems, Professor Vallancourt uses real world examples and ties the coursewell to practical applications very well.\nThe tests were very fair, with a good mix of easier and more challenging questions.  The homework problem sets were very manageable as were the attached labs (some of which were actually fun).  Surprisingly, the lab reports were very painless, and all of the assignments reinforced the lectures very well.\nOverall this was a good choice for a pre-professional course with an outstanding professor.\nWorkload:\nThree tests and a final.Homework problem sets, spread out, probably averages to about one every two weeks.Weekly lab, 1-2 hours long plus a short write up.\noverall very manageable.\n	"positive"
1	1	\nProf. Vallancourt not only knows his stuff (with many years of experience in the field, not just teaching), but he also has a very friendly and personal manner of presenting the material (incidentally, even his more "technical" jokes are actually funny). He is able to supplement (and sometimes even supersede) material from the textbook with industry "tricks" and real-life examples, which makes going to class fun and rewarding. Finally, Prof. Vallancourt is always willing to take the extra step when it comes to giving his students additional help: he is very approachable not only in office hours, but he will also go out of his way to help at other times if necessary; additionally, he always makes sure to schedule any supplementary events (i.e. review sessions or lab time) in such a way that EVERYONE can attend, even if that means that he ends up having to lead a lot more sessions than are typically held. Overall, I get the feeling that Vallancourt genuinely cares about his students learning the material, and is willing to go out of his way to make sure that it happens.\nWorkload:\nOne problem set a week, usually not too time consuming. Three midterms of varying difficulty, but with generous curves when required. Three hour lab session each week, with short lab reports for each. The final seemed very fair.\n	"positive"
3	3	\nProfessor Chang is a pretty good professor.  Since I am a distance student via CVN I like how he scans in the notes and provides them to you.  This allowed me to watch the lecture and take some notes on his notes.  I also like how he lectures from the slides and takes notes on a blank sheet a paper rather then on a board.  This makes it easier for me to see on the mpeg file.  I noticed in other classes sometimes the camera is not pointing towards the notes on the board.  I also likes how he provides the old exams to help you study.  You might be also able to find more old exams from the Internet.  If you study from the old exams you should have no problem in his class.  If you are a CVN student I will recommend you take this class first.  I also like how he goes over concepts that you might have forgotten.  This helped me out since I have not seen some concepts in a long while.  I would definately take another class from him.\nWorkload:\n6-7 hws, 1 midterm, 1 final.\n	"positive"
3	3	\nProfessor Chang is by far the best professor I've had in the EE dept. and one of the best I've had at Columbia. Very nice and you can tell that he has a passion for the subject and is really trying to make sure you understand the material.\nHe starts from color theory and then goes to morphological processes, all topics requiring a good bit of what was learned in Signals and Systems and then some. If you haven't taken DSP (like me) and didn't immediately know how to do discrete Fourier/Fast fourier, he goes through everything. Not to the point of being annoyingly meticulous, but thorough, making sure everyone in the class is on the same page.\nHW is pretty easy, challenging at times but very doable. Set up so that you understand what you are learning a lot better. If you still don't get it after lectures and hw, he is very approachable and willing to walk you through things.\nMidterms are not by any means easy, but they are like the hw, doable and challenging. Make sure you review the HW and notes before exams, exams are open note/open book. \ngreat class if you are interested in learning the theory behind photoshop functions, etc.\nWorkload:\n5-6 HW assignments (half book, half MATLAB programming), due every 2 weeks. 2 midterms. final. \n	"positive"
6	7	\nPersonal idea, this course should be considered as one of the simplest course for grad level, especially when you are in your last semester and want to spend more time on job hunting, or when you are dealing with other heavy courses like OS... Besides, 4111 now is a core! Should it be core earlier, why bothering get trapped by OS. (Holly #@$@$#!, although I admit one can really improve a lot by taking OS.)\nYeah, prof. has an accent, but you have textbook, read it! After all, databases system are not designed to confusing people. We are not at Kindergarten and need to be instructed with everything. The projects are not that hard. The homework are easy. The midterm and final are OK if you know what you've learnt throughout the semester. You don't really need prior experience with databases. Last but not least, firms do pay attention to the relational databases project you are working on, understand the project and explain well during an interview, it will land you a full-time job or internship. Of course, we have a lot of new generation databases like cassandra, MongoDB, etc. The relational database, however, just like ball pen, simple but remains powerful.\nWorkload:\nnot that much, especially if you compared with other grad level course\n	"negative"
6	7	\nThis class epitomizes the worst college class where you get a bunch of theoretical knowledge and NO application. We learned about functional dependencies within databases, and now I can show what a functional dependency is...but what is that within an actual database and how does this apply to SQL? We spent 2-3 lectures on the theory and underlying implementation of indexes....but didn't even touch how to actually create an index in SQL. We didn't introduce us to any of the numerous databases available (MySQL, Postgres, SQLite, ...) and had us play with a variant of an Oracle database that I'm pretty sure NO ONE uses in industry. And now I'm thrown out into the real world with a hammer and I have no idea how to use it. A month later I'll probably be nailing my finger into the wall by accident.\nBesides that, the professor creates slides that are basically copy-pasted from the textbook (and the textbook is horrible with typos, mathematical notation gibberish with no explanation, and no real-world application mentions). He hates taking questions, his TAs are half of the time absent from their OHs, and he obviously doesn't care about the class. I guess he's funny though (if you like "haha wow I can't believe I'm sitting in this classroom funny").\nIf you plan on taking this course I recommend the following advice.\n\nWhat does this advice mean? Basically, if you take this class you will be paying a few thousand dollars in tuition to find and learn everything on your own.\nWorkload:\nFour hws where the answers are straight from the textbook (if you understand it). A project where you build a web app with an underlying database (he gives no tutorial on how to build a web app and the Oracle database you use is never actually used within industry). A final and a midterm where the answers are arbitrary (is this really good database design? is this really the best SQL query you could have used?)  or the answers are cookie-cutter (vocab, exactly like the hw or class example).\n	"negative"
6	7	\nI think Biliris is a fairly strong professor and, given that it was a 2.5 hour class, I enjoyed it as much as I possibly could. As with all professors he has his pros and cons.\nBiliris is a ball or energy and a personality in the classroom and undeniably cares about his students. He responds to questions on Piazza fairly quickly, made a point to get to know people in the class. He even joked that we could call him if going through a breakup. \nHe is very energetic and enthusiastic about the material and the examples, and he tends to be good at making things quite simple, so the combination is good. He also continually involves students of the classroom. He will ask for suggestions on how to solve something, ask someone else to point out flaws, etc. This keeps the room fairly engaged for a class that is 2.5 hrs long. \nBiliris welcomes student questions in lectures and will always stop to answer a question before moving on. This both a pro and a con. Sometimes I feel like the class got stuck because we would keep harping on an issue that was either not extremely relevant or simply repetitive. However, the good news is that, if you are willing to raise your hand, you will always walk out of class knowing what is going on. Unfortunately, Biliris sometimes either struggles to understand a student question or misinterprets the question. As such, you have to be persistent with rephrasing till he understands the question, at which point he usually does a solid job of answering.\nThe workload is quite light. There are 4 light homework assisgnments, two projects, a midterm and a final. The first project is significantly more in depth than the second, but the time allocated for the projects reflects that. The midterm is exactly the same in structure as the practice midterm, which makes it easy to study for. No practice final is given, and the material was harder and more technical, so make sure to spend time on Query Optimization when studying for the final. \nHis grading tends to be fairly generous in my view, and I think the level of CS ability in this class is lower than most other CS classes, since it is required for OR undergrads and many masters students seemed to come from weak data structures backgrounds (we spent 30 minutes discussing the complexity of a hash table). Overall, assuming you go to class and pay attention, this is a low workload class apart from projects and exams.\n\nWorkload:\n\n	"neutral"
6	9	\nReally nice Prof. Really good in office hours if you need a concept explained further. Interesting first project, second project in C++ is boring, takes it right out of textbook. The material is reasonably mixed with real world examples and theory. Grading is fair, although midterm and final are overly weighted towards theory. \nWorkload:\n5 homeworks 1 group project in Java 1 individual project in C++, midterm, final\n	"positive"
6	9	\n\nWorkload:\n5 homeworks, 2 projects, midterm, final\n	"neutral"
6	7	\nAbsolutely awful. His lectures are boring as shit and he doesn't actually realize that a 2.5 hour class can be taught in more than 8 powerpoint slides (literally). For some reason, he's obsessed with Barbados too and won't stop talking about it.\n\nLuckily though, the material is easy and there's not much of it. There's a grand total of 10 short lectures (only 9 of them are tested on), compared to other classes that have about 25 a semester. The average won't be that high because you're with a bunch of IEOR majors and grad students that don't know how to program. The 4 homeworks can be tricky at times, but honestly not too bad.\nThe group projects are relatively easy and straightforward. You just have to demonstrate that your projects contain every concept that was taught in class, regardless of whether or not your Database schema will benefit with it (i.e. Aggregation is great in theory, but NOBODY puts it into practice in their database. it makes things painfully redundant and difficult. but since we learned it in class, you'll lose a substantial amount of points if you don't have aggregation in your database). Don't bother making your project look pretty or have much functionality. As long as you demonstrate the concepts that were in class, you'll get full credit. The median on project 2 was 49/50, if that says anything to you.\nYou have a total of 6 late days, 3 for the individual homeworks, in total, and 3 for the projects, in total. So clutch.\nMidterm and final are straightforward. If you know relational algebra, SQL, and the concepts, you'll do fine. And let me remind you, DON'T GO TO HIS LECTURES.\nWorkload:\n\n	"negative"
6	7	\nWhere to begin...\n1) This class was useless. Biliris is a mediocre lecturer and an incompetent teacher (or he just wasn't trying). His lectures were a complete waste of time. He would crap on and on about some simple concept in the most unintelligible way for an hour at a clip. I can honestly say that I did not learn anything substantial from this class. By the sixth week half of the students did not show up or left at the break. By the fourteenth week it was more like 80%. The material was presented with no context and no depth. I could have taught this class better than he did, and I do not have near the amount of database and teaching experience as he does.\n2) I ended up doing all of the group work by myself because my partner was so lost. I cannot blame him considering the lectures were essentially black holes. If I had not had database experience prior to this course I would have probably been as lost as my partner, who had none.\n3) A bit of the material was out of date. This happens in CS classes often, but it was particularly bad in this class. I think the textbook we were using was from 2003.\n4) We were forced to use Oracle for our projects, which was a nightmare. Oracle is one of the most bloated and hard to learn database systems around. Why we would use Oracle and not MySQL (very popular, modern, and easy to use) is beyond me.\n5) Biliris does not understand English well enough to teach a course. He can hold a conversation, but he cannot explain complex ideas. He did not understand questions asked by students and he often hid this by making fun of them.\n6) The grading in this class was ridiculous. Often points were taken off if we did not answer a question exactly how the TAs thought we should have, despite those requirements not being specified in the assignment description. Each homework and test problem was graded by a different TA, which meant you had to contact many TAs if you had questions about more than one problem. This was incredibly inconvenient.\n7) My assigned TA had worse English skill than Biliris, which made him useless to me.\nWorkload:\nThere were two projects. The first is pretty substantial and took some time, but was by no means difficult. The second could have been done in a few hours if Biliris actually ever mentioned PL/SQL during the lectures. \nThere were four homework assignments. Some were a bit challenging, but all were mostly irrelevant when it comes to actually learning something useful about databases.\nA midterm and a final. I have yet to take the final. The midterm was not hard, but the questions were as irrelevant as the homework problems. \n	"negative"
6	7	\n\nWorkload:\n\n	"negative"
6	7	\nThis was his first semester, and it showed. He just presented the lecture slides that came with the book, and read them outloud. Going to class was simply useless, if you had some other time to read it yourself. The first part of the class is  easy and straighforward. There's a big project in 3-stages to build your own database application (duh). The second part of the course reminded me of the good old days at Unger's comp org. However, even though Biliris is as boring and mistake-prone as Unger, he is really a cool guy. He even uses the break to go out and smoke. The second project had nothing to do with database. It could have been given to anyone who had taken statistics and data structures. Everything is graded by the TA.\nWorkload:\n5 problem sets taken mostly from the book, 2 programming projects in Java or C++ in groups of two, a midterm, and a NON-cumulative final. Don't be surprised to find something in the homework that was never mentioned in class. If you ask him in class, he will explain it, but he expects you to just read the book. In that sense, this class reminded me a lot of comp org; the book was almost as thick, but the details were just as disgusting. His tests are short and to the point. Even the final was only an hour and a half with 4-5 questions. \n	"negative"
6	7	\nThe WORST professor ever. His accent made the lectures hard for us to understand. Besides, when we tried to ask questions most of the time he wouldn't answer that but made fun of us. His class was totally not helpful. You could read the slides by yourself and don't have to waste your time going to his class. You'd better check if your teammate could follow up otherwise it's likely that you will understand nothing in his class. The curve is bad, many people had got C's. \nWorkload:\n\n	"negative"
7	8	\nTL;DR: Hsu is a solid professor if you're a math-y sort of person who wants derivation, proofs and (by CS standards) rigor. But if you want an easy ML survey course, go take AI, which is pretty much that.\nThe good:\nProfessor Hsu is by no means the most charismatic lecturer at Columbia, but he teaches a solid ML course. His lectures are thorough and rigorous -- he does not succumb to the temptation to use teaching a survey course as an excuse to skim easy topics at a high level -- and the online lecture notes are quite good. \nAlso, it was really nice that the two textbooks the course uses are both available online for free, legally, and that he provided us links to them, unlike so many professors who assign the $300 latest edition of [insert textbook] without giving students' finances a second thought.\nI was absolutely amazed how fast he responds to Piazza questions; he was single-handedly more responsive than a crew of about 8 TAs in another of my classes. The responses, always within a few hours, are sometimes not what the poster is hoping for (monosyllables aren't unusual: quite a few questions get a "no." and no more, particularly if they're stuff like extension requests), but the question is invariably answered in full. And that means stuff like "what should we review for the final?" gets answered with a 28-point bulleted list.\nThe bad:\nNo floating late days. There's a reason almost every CS class offers them, and it's both because they avoid all the whining on Piazza from people who put their work off to the last minute and because they provide a way to grant a bit of deadline flexibility without being unfair to anyone. Professor Hsu, if you read this, you really should consider having a few floating late days.\nThe first midterm was to a considerable degree just a speed test (caveat: I didn't feel that way; I mostly missed points for not being able to remember material. But everyone else I spoke to felt it was a speed test) and the curve was, by CS department standards, fairly tough.\nThe lecture hall (the huge one in NoCo) was dimly lit and has poor acoustics, which didn't make staying awake through lecture any easier given that Hsu isn't exactly lecturing at John McWhorter levels of energy most of the time.\nWorkload:\nThe homeworks (5 of them, max 5 hours apiece) weren't particularly hard, and there was a fair bit of hand-holding on them. Personally, I liked the hand-holding because it reinforces the material in a way that blindly guessing your way through a multi-step problem does not, but mileage may vary. Each homework had a programming component, to be done in MATLAB, but Hsu provided code to handle a lot of the tedious/extraneous stuff (e.g. rendering two images side by side); I found the programming to be a really effective introduction to MATLAB, which I'd never used before, and liked being able to focus only on the ML parts of programming.\n2 in-class midterms. \n	"negative"
7	8	\nThe only reason not to take this class with Daniel Hsu is if you already have a full workload for the semester. It's great but pretty difficult.\nThe overall curriculum of the course is heavily mathematical. There is relatively little concern with "real-world" issues like cleaning data or choosing good features. There were some students who sounded like they wanted a course that would teach them how to apply canned algorithms from sklearn or something. It's more about how to implement those algorithms.\nThe first half covered classification problems of various kinds, followed by some learning theory. There's some statistics which comes from a really interesting and unique perspective. It's the first time I've felt statistics wasn't boring. The second half covered unsupervised learning (clustering, etc.) and Markov models. Sprinkled throughout are theoretical discussions of optimization techniques used to fit various models. Finally, the last few lectures were just topics that the professor thought would be enriching, most notably a lecture on how rating prediction systems like Netflix actually work.\nThe class structure is pretty normal -- readings (that you can get by without doing), lectures, and problem sets, plus two exams.\nThe course had a Piazza board, which the professor was always watching. He would give clear, excellent answers, even at weird hours in the middle of the night. He also remained available the night before a problem set. I thought it was nice that he didn't pretend we had good time management skills, although I agree floating late days would have been good, or at least penalties for late assignments rather than refusing to accept them outright.\nThe lecture slides are all posted online and are detailed and excellent. I didn't need to take any notes. But this doesn't mean it's not worth going to lectures! Prof. Hsu is a good lecturer, although sort of quiet. His explanations perfectly complemented the slides. When students asked questions, he listened carefully and gave very clear and cogent answers.\nWe covered a ton of ground, at a decent level of mathematical sophistication. I think perhaps the professor overestimated our mathematical competence. However, those high expectations along with his good teaching skills made this a great class. Hopefully Columbia keeps him around. \nWorkload:\nProblem sets were difficult but not insanely so. They were usually a mixture of "easy" problems to test basic understanding, programming problems, and one or two proofs. There were never any problems that were unsolvable without knowing some kind of trick or having a deep insight -- hard work was always enough to get them.\nThe programming problems were in MATLAB, and usually consisted of training a classifier on a dataset that had already been "cleaned" into a nice format. Getting the code to work correctly was usually easy, but the datasets were large enough that efficiency was actually a serious issue, requiring lots of MATLAB tricks.\nExams were another story. There were two non-cumulative exams, both in-class. There was not enough time for the first exam, and the questions for both were quite difficult and often required a lot of creativity under time pressure. It was not enough to just recall the lecture material -- you had to really understand everything on a gut level. The median was very low for both exams. \n	"positive"
7	8	\nThis is a decent class where you will be challenged, put up with lousy instruction but learn a good deal in the process. Daniel Hsu is a super smart professor but about as engaging as a piece of wood. He knows the material in and out and leave you with an appreciation for ML by the end. The class runs pretty smoothly from an operational perspective. The response time on Piazza is insane - Daniel gets back to you in a few hours, especially right before HW deadlines and exams. His answers aren't generally helpful. You see a lot of monosyllabic "No"s as answers and he will put you down if your question is stupid or poorly worded (thank god for anonymity). However, when he does deem your question worthy, you get a thorough response.\nThe course assumes you have a decent background in calculus, statistics and linear algebra. Daniel does not pull any punches on the math. If you've taken Calc III, Linear Algebra and Intro to Probability and Stats, you should be fine. You have to be familiar with some matrix calculus, basic probability and stats (multivariate Gaussians, expectations, Baye's rule), projections, eigenvectors and SVD from linear algebra.\nDaniel focuses a lot on a lot of theory in machine learning and less on practice. Lots of long proofs and details on the math behind classification models. I personally think this is excellent since ML is inherently a very mathematical subject and understanding it at this level is key. We covered MLE, generative models, decision tress, linear classifiers, perceptrons, SVM, kernels, some ML theory, boosting, regression, PCA, clustering, entropy, HMMs and some math behind a lot of these topics in detail in their own dedicated lectures. Lots of good stuff!\nIt was impossible to stay awake in class since he turned off the lights in 501 NoCo and is a pretty boring lecturer. He doesn't engage with students unless someone asks a question. Thankfully, his slides are great and available online. I encourage you to try to pay attention in class because sometimes the slides are hard to understand on your own right before the exam at the last minute.\nThe homeworks were reasonable and consisted of a mix of theory and programming questions. They were challenging but nothing you couldn't do by spending some time pouring over the slides and going to office hours. Some of the theory questions were hard and it took my hours reading lecture notes or going to office hours to figure them out. The programming part tends to be simple but you have to vectorize your code for it to take minutes not hours, which can be a bit tricky. Assuming you don't pay attention in lecture (because it's really hard to) and that you have to read the slides from scratch to solve the HW, it takes 8+ hours of work on average. TAs were not helpful since they often couldn't solve the homework themselves.\nHis exams are impossible. Numerical grading on tests and homeworks was very generous and countered the difficulty of the exams. However, his letter grade assignments are on the harsh side.\nI heard StatML with Cunningham is fantastic. He's a great lecturer and focuses on intuition. If you want a more practical course, I would suggest that. If you're a CS major in the Foundations or AI tracks and need ML to count towards your track requirements, you're out of luck. Daniel's class is not bad and I would take it again even though it was a little painful.\nWorkload:\n\n	"positive"
7	8	\nI am about to say some things that will scare you, but when it comes down to it, you should take this class.\n\n\n\n\n\nWorkload:\nI took this class with 3 other classes with relatively light workloads, so I found it to be very manageable. I would not recommend taking this course with more than 1 other class with a heavy workload. 5 homeworks, and 2 exams covering the first and last half of the class, both in-class. 40/30/30 distribution I believe.\n	"positive"
8	9	\nThis is an acceptable course, but I have mixed feelings about it. Let's establish some baseline. Dr. Gravano is undoubtedly a capable lecturer, able to explain concepts lucidly. He occasionally told jokes that made the classroom laugh (sometimes). I'm pretty certain he genuinely cares for his students. You will almost certainly learn a lot of new and useful stuff while taking this course. Overall, the course was planned and executed well.\nIf you are on the NLP or ML track â€“ or you have a strong interest in search engines or big data, you should certainly take this course. This course definitely falls squarely in that domain (I mean hey, the free textbook was on the NLP part of Stanford's website...). I suspect the facts you will learn will be very relevant to you. However, if you are on the software track taking this course just because it has good reviews and fulfills a requirement, I'd suggest giving other courses stronger consideration. I don't exactly regret taking this class, but I think I could have chosen better.\nDr. Gravano curves the median to a B+ or A-. You may be thinking â€œSure, I'll just score above average!â€ but in a 90 something class full of smart people and easy assignments and tests, this is tricky to do â€“ and there is a good component of luck involved.\nThe two tests which comprise 50% of your grade are themselves comprised of about 40% (each) true false questions. That's 20% of your grade roughly!  I felt that some of them were vaguely worded and it's pretty hit or miss if you remember the specific fact the question tests you on.\nYou'll either need a very good memory or be very planned and careful how you review the lectures, because you really could get tested on any bullet point in them. It's fair and doable, but that's not my style. I'd rather be tested on my ability to apply what I learned to solve problems than my ability to simply remember details about stuff I could recall by referring to the textbook or my notes (neither of which are allowed on the exams).  Oh, and the readings are often straight torture. Thankfully, I don't ever remember seeing a question that was in the reading but not the lecture. Much of the writing was by authors showing off their ability to encrypt simple concepts into Latex strings. Dr. Gravano's lectures blew the textbook out of the water.\nThe rest of the tests involve manually carrying out an algorithm he discussed in the lecture. The tests are easy, but I'm really not a fan of easy tests because mistakes will cost you a lot more. But that's obviously my opinion... you might think otherwise. \nThe HWs (java or python) certainly aren't trivial, but they aren't complicated either. The class generally averaged 9/10 on them with a very small standard deviation. I think I learned more about Python than I did about search algorithms or the subject matter of the class while doing the assignments. The first and last project implemented an algorithm that is probably only a step or two above the complexity of what you would encounter in an undergraduate data structures class at a reasonably competitive school. The second project mostly involved string formatting and learning how to use the API to google's open knowledge database. Personally, I found it pretty tedious. \nThis is not to say the assignments can be finished in two days. The API in the second project took forever to figure out, but I'd really rather invest my energy somewhere other than learning an API I won't use again in the foreseeable future. \nIn the grand scheme of things, this is not a bad class. Good for some people, less so for others. As you can tell by the other positive reviews, some folks do enjoy it. I see where they are coming from. Some of the things I don't like about the class are a matter of personal taste. I hazard to say you will likely get your tuition's worth on this class. If you are NLP or ML I think you almost certainly will. I'm just saying this class isn't for everyone.\nWorkload:\nThe workload is medium-light. If you are taking some insanity classes like OS or cloud computing, this might be worth using to pad your credits to full time so you don't overstress yourself but still learn a few things -- but again, give other courses some consideration.\n	"positive"
6	9	\nProfessor Gravano is an excellent lecturer. His lectures are very clear, and he does a good job of answering questions. He is also very friendly and helpful during office hours and maintains an active presence on Piazza.\nThe only thing I didn't really enjoy was that he recycled some of the old databases lecture slides, which are sometimes unclear (his own lectures are much more helpful). Definitely show up to class, since the textbook, while helpful, contains more than you need to know and the slides are not very helpful on their own. Also, he offers homework and project grace late days which, while helpful, were not always allowed to be used on certain homework and project parts, which kind of defeats the purpose in some way.\nDespite my nitpicking, Gravano is still a great professor!\nWorkload:\nProblem Sets (15%) - Not too difficult, although be sure not to make silly errors, since most of the class does well on the problem sets.\nMidterm (25%) - The first question requires you to define database terms in at most two sentences - the rest of the exam are free response questions asking you to write relational algebra expressions, write a query, etc.\nFinal (40%) - Like the midterm, but slightly longer.\nProjects (20%, 15% for project 1 and 5% for project 2) - The first one is the longer one and each part is spread out over a couple of months. Definitely start early and pick a good partner, or you will suffer. The second one is much more manageable. \n	"positive"
6	9	\nThe material is easy. The teacher is acceptable. But be aware: your grades will depend a lot on how CAREFUL you are in following the instructions of homeworks/exams.  \nWorkload:\nlight\n	"negative"
6	9	\nProf. Gravano is great as a person, and puts much effort on teaching, but for reasons I can't even try to understand, he also puts great effort in making even the most basic concepts ungraspable and obscure - obscure in the sense that they appear like irrelevant details that won't help you one bit in getting through the course, let alone a job interview.\n\nAgain, I never had any doubt that Prof. Gravano was putting more than enough effort on the class, considering that as a top scientist on the field he had a busy enough schedule, but the obscurity of his explanations made lectures a tough going, until by the second half he was making jokes about everyone falling asleep. The blank looks he was getting by then contrasted with the sincere interest everyone had on the course material before the midterm, when his challenges and questions started such debates, he had to stop and ask people to quiet down. \nThis is one of the few courses in which the difficult textbook proves more useful than the overflowing PP slides or the teacher's talk. The TA I was assigned for the project appeared to get kicks out of taking points for the most trivial mistakes, but then again, it is difficult to blame the teacher for such things - in fact he was the one who had to ask her to take it easy with the grading. \nWorkload:\nThe hw's were doable, the projects only passably difficult, but the tests were horribly difficult - unless you have a good memory, when rote memorization of concepts will make it possible for you to float through.\n	"positive"
6	9	\nProfessor Gravano is tied for my favorite computer science professor.  He generally follows quality texts in his lectures and easily outperforms them in terms of the ease with which the material is presented.  His homeworks and exams are reasonably challenging but also completely fair -- don't worry if you get a 60% on an exam because it will come out in the curve.\nFurthermore, he always knows what he's talking about (more than some professors) as a result of an expansive knowledge of all aspects of databases thus far.  Now that I have gotten to know him better, it seems this stems from a more passionate interest in the subject than I've seen with others in their respective fields and it leads to a genuine desire to help students really master the material.\nI would definitely recommend taking the 6111 course if 4111 was at all interesting.\nWorkload:\n\n	"negative"
6	9	\n\nWorkload:\n\n	"negative"
6	9	\nProfessor Gravano is definitely one of the best professors I've had. His lectures are clear, precise, and occasionally humorous. He's very receptive to questions in class and often responds to questions both via e-mail and the discussion board, which is rare in my experience.\nHe uses slides (available online) for much of the introductory portion of the course, but often switches to the blackboard to work out particular examples. The latter half of the course was taught almost entirely on the blackboard. \nCorresponding book sections are listed for each lecture, but going to class or having a friend to take notes for you is important, as he sometimes he covers more or less material than is presented in the corresponding book chapters. The textbook (Ramakrishnan + Gehrke, 3e) is quite good, despite the many reviews you'll find online saying otherwise.\nWhile you will get a project mentor for your two projects, in reality there will be very little interaction with the TAs unless you seek it.\n\nWorkload:\n\nThe homeworks are light and occasionally add to the concepts covered in class. Projects are done in groups of two. The first project has multiple phases and takes place over a large span of time. The second project is short.\nThe majority of the class obtains perfect or near-perfect marks on the homeworks and projects. The exams will be the differentiating factor.\n\n	"neutral"
6	9	\nHere's the bottom line on the prof and the class. The class is more than a standard db offering in terms of workload: you got to do two projects, a web based db app and another theory-type number cruncher (most db classes make you do that one big app as a term project). There's also homeworks, mostly easy, with an occasional twist. If you go to class, do the projects/homework and score above avg in the exams, you're guaranteed a B+. One caution sign I'd post is: don't ignore the prereqs. You *need* to know how to code, and you *need* to know some data structure stuff. Don't screw around on this one, or you'll run into trouble in the projects. Gravano is basically a good guy. He does his best to help you out (even tho he appears touchy in class when cellphones ring, laptops ping etc, and you got to get used to the self-deprecating humor bit.) He's cool in office hours and email too (he gave several important hints on the second project ... this was a *huge* help after I spent like a whole weekend going blind on the numbers.) Overall, low stress class and he's a decent guy.\nWorkload:\n2 projects, 5 homeworks, midterm, final\n	"positive"
6	9	\nOne of the kindest souls in the Comp Sci dept. There aren't that many profs that post on the web board as often as he does. His lectures may not be the greatest (in fact, you could do most of the learning by using the textbook and the lecture notes he posts online), but his homeworks and tests are pretty well designed. Has a tendancy to delay assigning homeworks until he has covered the material in class.\nWorkload:\n5-6 homeworks with 3 grace days, 1-2 projects (in groups of 2), midterm, final.\n	"positive"
9	10	\nThis course is fairly simple, and a good bet if you are trying to improve your GPA.\n4-5 fairly easy, (written + programming) assignments (50%) that will be as simple or as complex as you want them to be; however, putting in extra effort to write an extraordinary program will not fetch you extra credits.\nEasy mid-term (20%) and finals (30%) that contain only open-ended, "open to interpretation" questions. There are no right or wrong answers to most of the questions. You are supposed to integrate all your knowledge to answer the questions, but basically the answers are so downright simplistic (and amusing) that they might not strike you at all. That is, if you have a rough idea of what has been taught in the class, and use appropriate terms from the slides and suggested reading materials while answering, and mention that your answer assumes "so-and-so", you can hardly get it wrong. \nThe whole course is about applying common sense. I have to say that I didn't learn anything spectacular in this course. I goofed up in the midterms because I didn't apply "enough" common sense, and did very well in everything else. And I got an A- with a 92%, so that should say it all.\n\nWorkload:\nLow to medium.\n	"positive"
9	10	\nProfessor Bellovin is an engaging and well-prepared lecturer.  He's got a good sense of humor, he can draw you in to the material, and when he does he explains it very clearly.  Of course, the material is intrinsically interesting, varied and with a strong focus on real-world security incidents.\nI'd recommend the course, but there are some caveats.  There's no single textbook and the readings, while usually interesting, vary greatly in terms of how thoroughly they cover their subjects.  On top of that, while lecture notes are posted online, they usually provide only a broad outline of what Bellovin says in class, so it can be hard to find reference material for homeworks or for studying if you missed a class or didn't take good notes.\nAlso, Bellovin appears to be something of a big shot in the computer security world outside of academia (eg., helped write Usenet back in the day, won the 2007 NIST / NASA security award).  This is kind of cool, but involves him missing a relatively large number of classes to travel to conferences and so on.  When he's gone, classes are taught by the TA, and at least in our case, the TA was a non-native English speaker and a bad lecturer.\nWorkload:\n4 homeworks, which make up 50% of the grade, plus a midterm and a final.  The midterm and the final are relatively easy if you've gone to a reasonable number of the lectures and done a reasonable amount of the reading; the questions are straightforward.  Each homework has a written part and a programming part.  The homeworks are moderately difficult and time-consuming, about the average for a Columbia comp sci class, but are graded particularly harshly.  There is also a tough lateness policy, and no freebies / dropping lowest grade / etc.  If the class is curved, it doesn't change much.\n	"negative"
9	10	\nI would recommend this class to anyone except the following two groups:\n\nOtherwise, I heartily recommend the course. Professor Bellovin's lectures are entertaining -- I actually looked forward to going to the lectures. His lectures are obviously well prepared; he seems to reuse the same slides but updates them the night before to keep them relevant. The lectures are organized and lively -- with a nice touch of sarcasm. \nThe assignments are mostly about building a secure program that manages files. Watch out -- just because you "meet the specs" doesn't mean you will get full credit (or even a good grade). Unlike other classes where the professor would promise "you can assume you will get proper input," here you can assume the graders will be very creative about how they can cause your program to produce errors. You have to validate inputs like crazy. Writing the actual program isn't hard, but you will use some unusual/unfamiliar c libraries so don't start too late because you need a day or two to familiarize yourself with the documentation. Definitely do assignment 0 to get your C/C++ up to scratch (and you WILL need it for assignment 1). If you start a week early on pretty much any assignment, it will be a breeze. If you start 2-3 days before the deadline, you will be pulling consecutive late-nighters. The assignments aren't cakewalk, but they aren't complicated or ambitious either.\nThe midterm and final are subjective (and easy), but graded fairly. They accept a lot of answers if the justification is good. They are still published on earlier versions of the course website if you want to have an idea of what they are like. If you know the lectures, can mix the concepts together, and can "think like a bad guy" you will do well on the midterms with little studying. If you pay attention in lecture and go over the slides, you will do well on the test. \nOverall, this is a really solid course, interesting, and not burdensome. I recommend it.\n\nWorkload:\nOn a scale of 1-10 with 10 being the hardest, I'd say 3-5 depending on your background and how interesting security is to you.\n	"positive"
12	12	\nI'm much more lukewarm on Servedio than most folks here. I'm an ML type undergrad, not an algos type, so without taking analysis of algorithms or similar I was maybe underprepared for this class. A bit of probability is pretty key for the PAC model in the middle half of the class. \nThe material was kind of interesting, but it's very much intellectual exercises with very little real world implications (which isn't exactly a hidden fact). The book for most of the semester (Kearns and Vazirani) is ok, at least it's nice and concise. \nIn lectures Servedio was generally clear, but I found that his answers to questions were only so-so. I think part of it is that the class was huge this semester, and it seemed like he wasn't scaling well from 30 students to 100, but maybe that will improve.\nThe problem sets kicked my ass, I rarely got more than a few points above the average, which was typically 20-30 out of 50 points. They require a huge amount of thought, and almost all required some novel proof technique. Some questions were from research papers from only 5 or 10 years ago, many were papers Servedio wrote 10-20 years ago.  In retrospect I think those who did well were focusing much more on these problem sets earlier, and spending a lot of time in office hours. \nThe "final exam" wasn't bad though, don't worry about it. \nWorkload:\n5 absolutely brutal problem sets. \n	"negative"
12	12	\nIn short, Rocco is the best professor I had in Columbia so far.  He is kind, clear, and intelligent. He made a difficult subject accessible and interesting.\nThat said, if you hate proofs and theory, maybe this class is not for you, but this is not his fault. He already tried his best to focus on the concept rather than the details.\nI don’t think that the class has no applications. It’s basically an algorithm class, but on algorithms that can learn. If you think algorithms have no real world application, then I am not sure what to say.  It’s cool to see that a seemingly simple-minded algorithm can learn complex concepts well, on par with humans (maybe it is how human brains work).\nThe homework takes a long time, so start early so that you have enough time to get help. He won’t tell you the solution directly, but at least can tell you if you are on the right track. A lot of times, people are just completely off the track because they have misconceptions. For me, I think part of the homework difficulty comes from my unfamiliarity with the area, so the 3rd and 4th homeworks turned out more difficult for me, but by the end of the last (5th) homework, I had already seen enough proof strategies that they became a bit like old tricks  (I’m not saying they are easy, but just more familiar to me).\nAs a previous post said, the final project turned out to be an educational experience for me. But I guess it depends on what paper you choose. I chose something closely related to what we learned and also not too ambitious, and it turned out to be a good choice.  I am glad that I was able to understand at least some parts of an original research paper in the field, which depends your understanding of class material but also adds onto that.\nAbout latex, I have mixed feelings. It’s really a pain to type in latex. I feel I spent close to half of my homework time on typing up in latex. But I understand that it makes things easier for TAs, who already have a lot of work. Also, some other classes (e.g ML) may require latex.\nIn summary, I learned a lot without too much stress. (the homeworks can be stressful/frustrating , but overall, the amount learned/stress ratio is much higher than an average CS class at Columbia).\nWorkload:\n5 homeworks and a final project (read a paper and explain it)\n	"negative"
12	12	\nA really fun class. As other reviewers have already pointed out, Prof. Servedio gives the clearest, best-organized lectures in the department---he made a large body of complicated theory totally intelligible.\nThe format of the class is nice: no exams, just a few problem sets and a final project. His argument is that the insight necessary to solve most of the problems in this class doesn't come right away even if you have a solid understanding of the material, so a test isn't a fair evaluation. This was certainly my experience---I felt like I had a better grasp of the theory than most of the class (this is judging by the pset averages: as so often seems to happen in this department, the undergrads inevitably outperform the grad students) and I would regularly spend hours staring at the homework assignments without making any progress.\nProf. Servedio was also extremely available outside of class, and was extremely helpful in suggesting references and proof techniques for my final project.\nSome advice: as soon as every problem set comes out, take an hour or so to just think about the problems without any expectation of solving them. Your brain has this marvelous ability to process subconsciously, and you'll find that if you return to the pset in a few days you've already made a great deal of progress without reading this.\nIn short, if you're in either the theory track or the AI track, this is a fun, low-stress (but not low-workload!) class that will do wonders for your development as as a computer scientist.\nWorkload:\nNot too much on paper, but be prepared to spend a loooong time on problem sets and invest a decent amount of time in your (12-ish page) final project.\n	"positive"
12	12	\nI don't have much to add to what previous reviewers have said, but I'm posting this mostly to say, yes, Rocco Servedio is still (Fall 2014) just as great as he's apparently always been. He's the first professor I've had who is an articulate, charismatic lecturer AND teaches a genuinely interesting, deep and challenging course AND is passionate about his subject. I've had two out of three before (e.g. Jae Lee, charismatic and passionate, or Yannakakis, challenging and passionate) but Professor Servedio is in a class of his own.\nMy only complaint is that this is the only class he teaches. I'd take anything taught by him.\nWorkload:\n5 homework assignments, all quite challenging -- START EARLY; no, really, start the day the assignment is sent out -- with averages around 50%. A final exam that covers all the material and isn't super-challenging (no trick questions), and a final paper (~10 pages) on some topic in computational learning.\n	"positive"
12	12	\nTruly, one of the VERY BEST professors I've had at Columbia (I'm a CS senior)--the whole school, not just the department. Both super intelligent and very capable of transmitting his knowledge to students (I heard he won a lot of accolades for teaching back at Harvard.) His lectures are very well-organized, and he recaps key concepts every time to ensure students follow. Rocco is also a very nice and approachable guy, always encouraging and answering questions in or out of class.\nThe subject material is very, very interesting. It is also very abstract and may be difficult for those who are not well-versed in CS theory and math. All the HW questions are proofs.\nHis problem sets are challenging and take a lot of time. But I think it is worth it. If you care about learning (he certainly cares about teaching) and are willing to work hard and think a lot, you will definitely enjoy this class.\nWorkload:\n6 difficult biweekly problem sets (I'm rather weak in math/theory, and each HW takes me a good few days of on-and-off thinking and writing plus TA help. Bottomline: don't start the night before.) Also a final implementation project.\n	"positive"
12	12	\nRocco Servedio is absolutely the best professor in the computer science department. He exhibits a level of competence and clarity that is a refreshing change from the general level of instruction at the Columbia CS department. He makes a complicated subject seem crystal clear, and the class never (amazingly), ever is boring -- The 75 minutes are over before you know it. Even the problemsets are a joy to complete -- and they are difficult. \nIf you can, absolutely, positively, definitely, without question take a course with this man.\nWorkload:\nBiweekly problem sets (that you should expect to devote many hours to) and a final project (Paper and presentation). No exams. \n	"negative"
12	12	\nIn short: Dr. Servedio is the man. He absolutely deserves the gold stud.\nI've never had a professor who was as approachable as Rocco. Of all the times I went to speak with him he was never short with me and was always genuinely interested in helping me learn the material. The man has a clear and present passion about what he teaches to the point where he seemed like he didn't want to hold back in his explanations (and thus divulge too much information about a particular problem I was having issues with). At one point he offered to meet with me since I wasn't going to be able to make his office hours that Friday. I can't imagine any of my other professors at Columbia doing the same thing.\nHis teaching is impeccable; no lazy PowerPoint slides here. I've always appreciated the teachers who give explanations to the class as they write; this level of engagement has always made learning feel much more natural and Dr. Servedio is very gifted at doing this. Every class he writes the notes and explains them at the same time and in general the process is paced very well and feels incredibly engaging.\nAll that being said, this class is HARD. Unless you have a passion for theory and machine learning, DO NOT TAKE THIS CLASS. This class is not for those with a superficial interest in either of those areas. I took this class because I had a passing interest in both fields and I had heard good things from classmates who had previously taken his class. I needed a class to fill out the rest of my semester and so I chose to take it; I chose wrong. The above words are not meant to be taken lightly; if you are not grounded in theory or lack the passion for this material, I assure you in the utmost that this class is not for you.\nThis class was meant to be my crash course in CS theory and I had not had much exposure to it outside of discrete math from my undergraduate school. I was also taking Algorithms at the same time. If there was ever a class that needed a pre-requisite, CLT might take the cake; some background in theory and notation would have, I believe, made worlds of difference for me. Rocco does have materials on his website that are meant to help you brush up on the basics needed for this class but the preparation seemed to fall very short of where I needed to be to do the assignments (more below).\nWorkload:\nThe workload for this class does not seem intimidating at first. You have five homework assignments, a final paper, and he now gives a final exam. Each homework assignment is only 5 problems. Do not take that number lightly; these assignments will break you. Expect to spend very considerable time doing each one; the problems are not only extremely challenging but you have to do everything in Latex. I made the mistake of taking CLT during a semester where my workload was very severe; do not make this mistake or you will be burned.\nThe problem sets are by far the hardest I have ever done in my life. Every once in a while there would be a problem I could solve completely but most of the time I felt like I was taking shots in the dark. We're talking problems that demand an utmost intimacy with the material; there are no problems even remotely close to a freebie here. You will spend hours upon hours gazing at your notes, just trying to make sense of everything, and even longer trying to make sense of the material in the context of the problem you are solving. Furthermore, partial credit is difficult to obtain at best; unless your solution is meticulously detailed and bulletproof, you WILL lose a lot of points. The average on every assignment as such was always absurdly low; I think only two of them were higher than 25/50 (all homeworks are out of 50 points, 10 points per problem)\nAs good as Rocco is at teaching, I did not find that the lectures really prepared me for the problem sets; that is why I think a decent background/passion in CS theory is necessary for this class. Virtually every problem demands some degree of intuition which isn't easy to obtain without the right background and only comes with experience. Taking this class in the context that I did oftentimes felt like being a fish out of water. I will reiterate: only take this if you have a decent CS theory background and/or a passion for the material.\nThe final exam wasn't too hard. Just about every problem was an identification question testing whether or not you paid attention in class. They were largely some variation on "What were we talking about when we discussed ______?". The last problem could have easily been on the problem sets which, given the time we had (1.5 hours; the exam was the last day of class), wasn't attempted by many.\nThe paper assignment was enjoyable and is supposed to be an opportunity to learn more about an area of computational learning theory that wasn't covered in class. I thought it was a smart move on Dr. Servedio's part to assign this in order to give students some freedom in exploring areas of interest. The stipulations of the paper were fairly light; all we were really required to do was to read a paper on some topic of computational learning theory, summarize the main ideas, and ultimately convince Dr. Servedio that we understood what we read.\n	"positive"
12	12	\nProf. Servedio's very good, gifted even, at explaining section a.b.c through to x.y.z of the textbook. His lectures, notes, and problem sets are high quality, better than those found elsewhere on course websites at CMU or UT Austin. So you will learn something or even a lot but is the right thing and is it worth taking for credit? No.\n\n\nBased on the above I would have serious doubts about taking another one of Prof. Servedio's courses for credit. Definitely do not take his learning theory course if you're not a Phd student in theory. If you're aiming to become one I suggest you take a computational complexity course or algorithms/optimization/math courses as this course will not help you in the future.\nWorkload:\nBased on self audit, varies from 18 to 22 hrs a week spent on 5 Problem sets = 70% of grade. 40+ hrs on a 10 page Final Project = 30% of grade is a survey of literature related to a topic (given on website and can get help from him regarding sources). Final project is tough because a lot of startup time is required to translate the notation and learn higher math that is frequently assumed. Topic selection is very crucial for success.\n	"negative"
13	13	\nI took the class CSOR 4231 with Prof Yanakakis. Unless you are really stupid, do NOT take this class under this Professor. Granted, he has great credentials and has won a Knuth prize or two for his research. But at the end of the day, teaching a course is not the same as doing research and not everyone can do both well. \nInstead of making the class interesting and explaining the background behind how algorithms should be designed and how they came to be, he just puts the algorithm on the board and makes a poor attempt at explaining it. Watch one lecture given by Stein on CVN and you will be inspired .. and sit for one lecture with this guy, and you will forget the little you knew before the class. His homeworks concentrate more on proving correctness than on designing algorithms and mapping problems to standard algorithms. It is a pity that a researcher of his caliber, does not have the ability or the inclination to make this class interesting. Believe me, you would be better off watching lectures on MIT OCW or stein's on CVN. You have been warned. \nWorkload:\nThe workload is high and you would have to devote about 10-15 hours a week for this course. There are 6 homeworks, a mid-term and a final.\n	"positive"
\.


--
-- Data for Name: professor; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY professor (pid, pname, dept, loc_no, loc_name) FROM stdin;
1	David Vallancourt	Electrical Engineering	1330	Mudd
2	Kenneth Shepard	Electrical Engineering	1019	Schapiro
3	Shih-Fu Chang	Electrical Engineering	709	Schapiro
4	Zoran Kostic	ELectrical Engineering	813	Schapiro
5	John W. Paisley	Electrical Engineering	422	MUDD
6	Eugene Wu	Computer Science	421	MUD
7	Alex Biliris	Computer Science	833	Mudd building
8	Daniel Hsu	Computer Science	426	Mudd
9	Luis Gravano	Computer Science	706	Schapiro
10	Steven Bellovin	Computer Science	454	MUD
11	Ansaf Salleb-Aouissi	ComputerScience	702	Schapiro
12	Rocco Servedio	Computer Science	401	Mud
13	Mihalis Yannakakis	Computer Science	455	Mud
14	Alfio Gliozzo	Computer Science	457	Mud
\.


--
-- Data for Name: professor2; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY professor2 (pid, pname, dept, loc_no, loc_code) FROM stdin;
1	David Vallancourt	Electrical Engineering	1330	MUD
2	Kenneth Shepard	Electrical Engineering	1019	SCEP
3	Shih-Fu Chang	Electrical Engineering	709	SCEP
4	Zoran Kostic	ELectrical Engineering	813	SCEP
5	John W. Paisley	Electrical Engineering	422	MUD
6	Eugene Wu	Computer Science	421	MUD
7	Alex Biliris	Computer Science	833	MUD
8	Daniel Hsu	Computer Science	426	MUD
9	Luis Gravano	Computer Science	706	SCEP
10	Steven Bellovin	Computer Science	454	MUD
11	Ansaf Salleb-Aouissi	Computer Science	702	SCEP
12	Rocco Servedio	Computer Science	401	MUD
13	Mihalis Yannakakis	Computer Science	455	MUD
14	Alfio Gliozzo	Computer Science	457	MUD
\.


--
-- Name: building_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY building
    ADD CONSTRAINT building_pkey PRIMARY KEY (b_code);


--
-- Name: course_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY course
    ADD CONSTRAINT course_pkey PRIMARY KEY (cid);


--
-- Name: professor_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY professor
    ADD CONSTRAINT professor_pkey PRIMARY KEY (pid);


--
-- Name: professor_pkey2; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY professor2
    ADD CONSTRAINT professor_pkey2 PRIMARY KEY (pid);


--
-- Name: course_prof2_cid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY course_prof2
    ADD CONSTRAINT course_prof2_cid_fkey FOREIGN KEY (cid) REFERENCES course(cid);


--
-- Name: course_prof2_loc_code_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY course_prof2
    ADD CONSTRAINT course_prof2_loc_code_fkey FOREIGN KEY (loc_code) REFERENCES building(b_code);


--
-- Name: course_prof2_pid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY course_prof2
    ADD CONSTRAINT course_prof2_pid_fkey FOREIGN KEY (pid) REFERENCES professor(pid);


--
-- Name: course_prof_cid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY course_prof
    ADD CONSTRAINT course_prof_cid_fkey FOREIGN KEY (cid) REFERENCES course(cid);


--
-- Name: course_prof_pid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY course_prof
    ADD CONSTRAINT course_prof_pid_fkey FOREIGN KEY (pid) REFERENCES professor(pid);


--
-- Name: course_review_cid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY course_review
    ADD CONSTRAINT course_review_cid_fkey FOREIGN KEY (cid) REFERENCES course(cid);


--
-- Name: course_review_pid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY course_review
    ADD CONSTRAINT course_review_pid_fkey FOREIGN KEY (pid) REFERENCES professor(pid);


--
-- Name: professor2_loc_code_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY professor2
    ADD CONSTRAINT professor2_loc_code_fkey FOREIGN KEY (loc_code) REFERENCES building(b_code);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

